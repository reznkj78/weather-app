{"version":3,"sources":["reducer/index.js","reducer/countryReducer.js","reducer/fullingcity.js","reducer/weatherData.js","store/index.js","actions/countryAction.js","components/layout/mainlayout.jsx","components/firstpage.jsx","utils/messages.js","services/httpservice.js","services/weatherservices.js","actions/weatherData.js","components/asid.jsx","actions/fullingcityName.js","components/header.jsx","components/maincontent.jsx","components/main.jsx","containers/wheather.jsx","containers/app.js","index.js"],"names":["reducers","combineReducers","countries","state","action","type","payload","fullingCity","weatherData","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","dispatch","a","data","Mainlayout","props","children","withRouter","history","className","onClick","push","to","errorMessage","message","toast","error","position","closeOnClick","axios","defaults","headers","post","interceptors","response","use","status","console","log","Promise","reject","get","put","delete","patch","Weatherservices","cityID","userLANG","http","config","BASEURL","ApIKEY","language","cityData","Aside","useDispatch","useState","getCountryName","setCountryName","getCityName","setCityName","getSelectLanguage","setSelectLanguage","getDsiabled","setDsiabled","cityname","useSelector","useEffect","countryName","isEmpty","getState","countryData","filter","item","country","formSub","event","preventDefault","onSubmit","e","for","name","value","id","onBlur","target","onChange","selected","disabled","map","placeholder","Header","format","interval","ticking","style","color","textDecoration","Maincontent","fontSize","marginTop","coord","lon","lat","weather","main","wind","speed","deg","temp","temp_max","temp_min","pressure","humidity","visibility","timezone","sys","sunrise","sunset","description","Main","WeatherApp","path","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.8430ba01.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport { countryReducer } from \"./countryReducer\";\r\nimport { FullingCityReducer } from \"./fullingcity\";\r\nimport { weatherDataReducer } from \"./weatherData\";\r\n\r\nexport const reducers=combineReducers({\r\n    countries:countryReducer,\r\n    fullingCity:FullingCityReducer,\r\n    weatherData:weatherDataReducer\r\n})","export const countryReducer=(state=[],action)=>{\r\n    switch (action.type) {\r\n        case \"COUNTRY_DATA\":\r\n            return [...action.payload]\r\n        default:\r\n            return state;\r\n    }\r\n}","export const FullingCityReducer=(state=[], action)=>{\r\n    switch (action.type){\r\n        case \"FULLING_CITY_NAME\":\r\n            return [...action.payload]\r\n        default:\r\n            return state;\r\n    }\r\n}","export const weatherDataReducer=(state=[],action)=>{\r\n    switch (action.type) {\r\n        case \"WEATEHR_DATA\":\r\n         return [...action.payload]\r\n        default:\r\n            return state;\r\n    }\r\n}","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { countryAction } from \"../actions/countryAction\";\r\nimport { reducers } from \"../reducer\";\r\n\r\nexport const store =createStore(\r\n    reducers,\r\n    compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n)\r\n\r\n\r\n\r\n\r\n// initializa\r\nstore.dispatch(countryAction())\r\n\r\n// subscribe\r\n// store.subscribe(() => console.log(store.getState()));","import data from '../utils/citylist.json'\r\nexport const countryAction =()=>{\r\n    return async dispatch=>{\r\n        \r\n        await dispatch({type:\"COUNTRY_DATA\", payload:data})\r\n    }\r\n}","import React from 'react';\r\nimport { Fragment } from 'react/cjs/react.production.min';\r\n\r\nconst Mainlayout = (props) => {\r\n    return (  \r\n        <Fragment>\r\n   {/* <main class=\"container content c-main\"> */}\r\n        {props.children}\r\n    {/* </main> */}\r\n        </Fragment>\r\n    );\r\n}\r\n \r\nexport default Mainlayout;","import React from 'react';\r\nimport { Fragment } from 'react/cjs/react.production.min';\r\nimport {withRouter} from 'react-router-dom'\r\nconst Firstpage = ({history}) => {\r\n    // const{pathname}=location\r\n    const changrPage =()=>{\r\n        history.push(\"/weather\");\r\n    }\r\n    return ( \r\n        <Fragment>\r\n              <div className=\"first-page-title-container\">\r\n    <h1 className=\" text-center title-main-page \">WHEATHER APP</h1>\r\n    <p className=\"text-center  first-page-description\">وضعیت اب هوا رو دریابید !</p>\r\n    <button onClick={changrPage} to=\"/weather\"className=\"first-page-btn\">برای تعیین وضعیت اب و هوا کلیک کنید</button>\r\n    \r\n</div>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default withRouter(Firstpage);","import { toast } from 'react-toastify';\r\n\r\nexport const successMessage = message => {\r\n    toast.success(message, {\r\n        position: \"top-right\",\r\n        closeOnClick: true\r\n    });\r\n};\r\n\r\nexport const errorMessage = message => {\r\n    toast.error(message, {\r\n        position: \"top-right\",\r\n        closeOnClick: true,\r\n    });\r\n};\r\nexport const warnMessage = message => {\r\n    toast.warn(message, {\r\n        position: \"top-right\",\r\n        closeOnClick: true,\r\n        position: toast.POSITION.TOP_CENTER,\r\n    });\r\n};\r\nexport const infoMessage = message => {\r\n    toast.info(message, {\r\n        position: \"top-right\",\r\n        closeOnClick: true,\r\n        position: toast.POSITION.TOP_CENTER,\r\n    });\r\n};\r\n","import axios from \"axios\";\r\nimport { errorMessage } from \"../utils/messages\";\r\n// =========================\r\n\r\n// =======================\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\n\r\n\r\naxios.interceptors.response.use(null, error => {\r\n    const expectedErrors =\r\n        error.response &&\r\n        error.response.status >= 400 &&\r\n        error.response.status < 500;\r\n    if (!expectedErrors) {\r\n        console.log(error);\r\n       errorMessage(\"مشکلی از سمت سرور رخ داده است\")\r\n    }\r\n\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,\r\n    delete: axios.delete,\r\n    patch: axios.patch\r\n};\r\n","import http from './httpservice'\r\nimport config from './config.json'\r\n\r\nexport  const Weatherservices =(cityID,userLANG)=>{\r\n    return http.post(`${config.BASEURL}id=${cityID}&lang=${userLANG}&appid=${config.ApIKEY}`)\r\n}\r\n","import { Weatherservices } from \"../services/weatherservices\"\r\n\r\nexport const weatherData=(cityID,language)=>{\r\n    return async dispatch=>{\r\n        const {data}=await Weatherservices(cityID,language)\r\n        console.log(data);\r\n        let cityData=[];\r\n        cityData.push(data);\r\n        await dispatch({type:\"WEATEHR_DATA\",payload:cityData})\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Fragment } from 'react/cjs/react.production.min';\r\nimport { isEmpty } from \"lodash\";\r\nimport { useSelector} from 'react-redux';\r\nimport { errorMessage } from '../utils/messages';\r\nimport { useDispatch } from 'react-redux';\r\nimport { FullingCity } from '../actions/fullingcityName';\r\nimport { weatherData } from '../actions/weatherData';\r\n\r\n\r\n\r\nconst Aside = () => {\r\n     \r\n    const dispatch=useDispatch()\r\n    const [getCountryName,setCountryName]=useState(\"\")\r\n    const [getCityName,setCityName]=useState(\"\")\r\n    const [getSelectLanguage,setSelectLanguage]=useState(\"en\")\r\n    const [getDsiabled,setDsiabled]=useState(true)\r\n\r\n    const cityname=useSelector(state=>state.fullingCity)\r\n\r\n\r\n    \r\n \r\n\r\nuseEffect(()=>{\r\n    if(!isEmpty(getCountryName)){\r\n        setDsiabled(false)\r\n    }\r\n    dispatch(FullingCity(getCountryName))\r\n\r\n},[getCountryName])\r\n\r\n    const formSub=async (event)=>{\r\n        event.preventDefault()\r\n        if(isEmpty(getCountryName)||isEmpty(getCityName)){\r\n            errorMessage(\"لطفا مقادیر را انتخاب کنید\")\r\n          \r\n        }else{\r\n        await dispatch(weatherData(getCityName,getSelectLanguage))\r\n        console.log(getSelectLanguage);\r\n        }\r\n       \r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n\r\n        <aside className=\"c-aside\">\r\n        <h3 className=\"text-center\">دسترسی ها</h3>\r\n        <form onSubmit={(e)=>formSub(e)}>\r\n            <label for=\"\" name=\"select-language\"> \r\n                <p> زبان خود را انتخاب کنید :</p>\r\n                <input type=\"radio\" value=\"fa\" name=\"select-language\" id=\"\" onBlur={e=>setSelectLanguage(e.target.value)}/>فارسی\r\n                <input type=\"radio\" value=\"en\" name=\"select-language\" id=\"\" onBlur={e=>setSelectLanguage(e.target.value)} /> english\r\n                <input type=\"radio\" value=\"ar\" name=\"select-language\" id=\"\" onBlur={e=>setSelectLanguage(e.target.value)}/> العربی\r\n            </label>\r\n            <hr/>\r\n            <select className=\"select-country\" onChange={e=>setCountryName(e.target.value)}>\r\n                <option value=\"\" selected disabled>انتخاب کشور</option>\r\n                <option value=\"GE\">آلمان</option> \r\n                <option value=\"IR\">ایران</option>\r\n                <option value=\"SY\"> سوریه</option> \r\n                <option value=\"YE\">یمن</option>\r\n            </select>\r\n           \r\n            <select className=\"select-city \" disabled={getDsiabled} onChange={(e)=>setCityName(e.target.value)}>\r\n            <option value=\"\" selected disabled>انتخاب شهر</option>\r\n                {\r\n                    cityname.map(item=>(\r\n                        <option key={item.id} value={item.id}>{item.name}</option>\r\n                    ))\r\n                }\r\n               \r\n            </select>\r\n            <hr/>\r\n            <label for=\"\" className=\"search-box\">\r\n                <input type=\"text\" name=\"\" id=\"\" placeholder=\"شهر مورد نظر را سرچ کنید\"/>\r\n                <span className=\"iconify iconify-search\" data-icon=\"bi:search\"></span>\r\n            </label>\r\n            <hr/>\r\n            <button className=\"form-btn\" > تایید </button>\r\n        </form>\r\n      </aside>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default Aside;\r\n","export const FullingCity=(countryName)=>{\r\n    return async (dispatch,getState) =>{\r\n        await dispatch({type:\"FULLING_CITY_NAME\", payload:[]})\r\n        const countryData=getState().countries;\r\n        let cityname=[];\r\n        cityname=countryData.filter((item=>item.country===countryName))\r\n        await dispatch({type:\"FULLING_CITY_NAME\", payload:cityname})\r\n    }\r\n}","import React from 'react';\r\nimport Clock from 'react-live-clock';\r\nimport { Fragment } from 'react/cjs/react.production.min';\r\nimport {Link} from 'react-router-dom'\r\nconst Header = () => {\r\n\r\n    return ( \r\n        <Fragment>\r\n        <header className=\"context\">\r\n        <nav\r\n          className=\"\r\n            nav\r\n            justify-content-between\r\n            align-items-center\r\n            c-nav\r\n            nav-justified\r\n          \"\r\n        >\r\n          <h4 className=\"nav-item text-info p-2\">createBy:@reznkj</h4>\r\n          <h3 className=\"nav-item text-info align-self-center p-2\"><Clock format=\"HH:mm:ss\" interval={1000} ticking={true} /></h3>\r\n          <p className=\"nav-item text-info p-2\">\r\n            <Link style={{color:\"inherit\",textDecoration:\"none\"}} to=\"/\">صفحه اصلی</Link>\r\n            <span className=\"iconify\" data-icon=\"tabler:transfer-out\"></span>\r\n          </p>\r\n        </nav>\r\n      </header>\r\n      </Fragment> \r\n    );\r\n}\r\n \r\nexport default Header;","import { isEmpty } from 'lodash';\r\nimport { useSelector } from 'react-redux';\r\nimport { Fragment } from 'react/cjs/react.production.min';\r\n\r\nconst Maincontent = () => {\r\n\r\n    const data=useSelector(state=>state.weatherData)\r\n\r\n    if(isEmpty(data)){\r\n        return (\r\n            <div className=\"c-main-content\">\r\n                <h1 className=\"text-center text-warning \" style={{fontSize:\"1.5em\",marginTop:\"50%\"}}> منتظر دریافت اطلاعات کاربر ...</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n              <div className=\"c-main-content\">\r\n        <h2 className=\"text-center\"> وضعیت آب و هوای شهر {data[0].name}</h2>\r\n        <hr/>\r\n      <div className=\"iconify-wheather-mood-container\">\r\n          <span className=\"iconify iconify-wheather-mood\" data-icon=\"fluent:weather-partly-cloudy-day-16-regular\" style={{color: \"skyblue\"}}></span>\r\n          {/* <span className=\"iconify iconify-wheather-mood\" data-icon=\"emojione:cloud-with-snow\" style=\"color: skyblue;\"></span>\r\n          <span className=\"iconify iconify-wheather-mood\" data-icon=\"emojione:sun\"></span>\r\n        <span className=\"iconify iconify-wheather-mood\" data-icon=\"ion:rainy-outline\" style=\"color: skyblue;\"></span>\r\n       <span className=\"iconify iconify-wheather-mood\" data-icon=\"fontisto:cloudy-gusts\" style=\"color: white;\"></span> -->\r\n        <span className=\"iconify iconify-wheather-mood\" data-icon=\"wi:storm-showers\" style=\"color: black;\"></span> */}\r\n    </div>\r\n        <div className=\"Geographical-coordinates\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>عرض جغرافیایی</th>\r\n                        <th>طول جغرافیایی</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{data[0].coord.lon}</td>\r\n                            <td>{data[0].coord.lat}</td>\r\n                        </tr>\r\n                        \r\n                    </tbody>\r\n\r\n            </table>\r\n        </div>\r\n        <div className=\"wheateher-situation\">\r\n            <p >وضعیت : <span>{data[0].weather[0].main}</span></p>\r\n            <p>سرعت باد:<span>{data[0].wind.speed}</span></p>\r\n            <p>درجه وزش :<span>{data[0].wind.deg}</span></p>\r\n            \r\n        </div>\r\n        <hr/>\r\n        <div className=\"wheateher-situation\">\r\n            <p>دمای هوا <span>{data[0].main.temp}</span> درجه</p>\r\n            <p>حداکثردما <span>{data[0].main.temp_max}</span> درجه</p>\r\n            <p>حداقل دما <span>{data[0].main.temp_min}</span> درجه</p>\r\n        </div>\r\n        <hr/>\r\n\r\n        <div className=\"wheateher-situation\">\r\n            <p>فشار هوا : <span>{data[0].main.pressure}</span></p>\r\n            <p>رطوبت هوا:<span>{data[0].main.humidity}</span></p>\r\n            <p>قابلیت دید:<span>{data[0].visibility}</span></p>\r\n        </div>\r\n        <hr/>\r\n\r\n        <div className=\"wheateher-situation\">\r\n\r\n            <p>منطقه زمانی :<span>{data[0].timezone}</span></p>\r\n            <p>طلوع افتاب :<span>{data[0].sys.sunrise}</span></p>\r\n            <p>غروب افتاب :<span>{data[0].sys.sunset}</span></p>\r\n        </div>\r\n        <hr/>\r\n        <div>\r\n          <p className=\"d-inline\">توضیحات : </p>\r\n          <span>{data[0].weather[0].description}</span>\r\n            \r\n        </div>\r\n        \r\n\r\n      </div>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default Maincontent;","import React from 'react';\r\nimport { Fragment } from 'react/cjs/react.production.min';\r\nimport Aside from './asid';\r\nimport Header from './header';\r\nimport Maincontent from './maincontent';\r\n const Main = () => {\r\n     return ( \r\n         <Fragment>\r\n             <Header />\r\n              <main className=\"container content c-main mt-3\"> \r\n            \r\n             <Aside/>\r\n             <Maincontent/>\r\n             </main>\r\n         </Fragment>\r\n      );\r\n }\r\n  \r\n export default Main;","import React from 'react';\r\nimport Mainlayout from '../components/layout/mainlayout';\r\nimport {Switch,Route} from 'react-router-dom'\r\nimport Firstpage from '../components/firstpage';\r\nimport Main from '../components/main';\r\nconst WeatherApp = () => {\r\n    return ( \r\n    \r\n<Mainlayout>\r\n    <Switch>\r\n        <Route path='/weather'>\r\n            <Main/>\r\n        </Route>\r\n        <Route path='/'>\r\n            <Firstpage/>\r\n        </Route>\r\n    </Switch>\r\n</Mainlayout>\r\n \r\n     );\r\n}\r\n \r\nexport default  WeatherApp;","import React from 'react';\r\nimport { ToastContainer} from 'react-toastify';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport WeatherApp from './wheather';\r\nconst App = () => {\r\n    return ( \r\n        <BrowserRouter>\r\n        <WeatherApp/>\r\n        <ToastContainer/>\r\n    </BrowserRouter>\r\n     );\r\n}\r\n \r\nexport default App;","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/index';\r\n\r\nimport App from './containers/app';\r\n\r\nrender(\r\n    <Provider store={store}>\r\n    <App/>\r\n    </Provider>\r\n    \r\n,document.getElementById(\"root\"))\r\n"],"sourceRoot":""}